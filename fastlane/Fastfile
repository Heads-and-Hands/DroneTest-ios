#!usr/bin/ruby

fastlane_version '2.0'

default_platform :ios

api_key = "fastlane/api-key.json"

platform :ios do

  lane :certs do
      create_keychain(name: "KeychainName",password: "password", default_keychain: true,unlock: true,timeout: 3600,lock_when_sleeps: true)
      import_certificate(certificate_path: "/Users/ec2-user/AppleWWDRCA.cer")
  end

  desc 'Create a new application on the developer portal'
  lane :create do
    produce
    match(
      type: "development",
      clone_branch_directly: false,
      api_key_path: api_key
    )
    match(
      type: "appstore",
      clone_branch_directly: false,
      api_key_path: api_key
    )
  end

  desc 'Register devices on apple portal'
  lane :register do
    register_devices(
      devices_file: "./fastlane/devices.txt",
    )
    match(
      type: "development",
      force_for_new_devices: true,
    )
  end

  desc 'Perform test checks'
  lane :test do
    bootstrap_cocoapods
    scan(
      output_directory: deploy_dir,
      cloned_source_packages_path: ".cache/spm",
    )
  end

  desc 'Deploy a build for beta testing'
  lane :internal do
    match(
      type: "appstore",
      readonly: true,
      api_key_path: api_key
    )

#    bootstrap_cocoapods
#    add_badge(
#      glob: '/match-tv/**/*.appiconset/*.{png, PNG}'
#    )

#    increment_build_number(
#      build_number: build_number
#    )

    gym(
      export_method: 'app-store',
      configuration: 'Internal',
      cloned_source_packages_path: ".cache/spm",
    )

#    upload_symbols_to_appmetrica(post_api_key: appmetrica_key)

#    pilot(
#      api_key_path: api_key,
#      beta_app_review_info: {
#        contact_email: 'handh.ci@gmail.com',
#        contact_first_name: 'Heads',
#        contact_last_name: 'Hands',
#        contact_phone: '+79999999999',
#        demo_account_name: "test@test.test",
#        demo_account_password: "qwerty1",
#        notes: 'Fixes and improvements'
#      },
#      distribute_external: true,
#      demo_account_required: true,
#      beta_app_feedback_email: 'handh.ci@gmail.com',
#      beta_app_description: 'Beta build for testing',
#      changelog: 'Fixes and improvements',
#      groups: 'Beta',
#    )

  end

  desc 'Deploy a release build'
  lane :release do
    bootstrap_cocoapods
    match(
      type: "appstore",
      readonly: true,
      api_key_path: api_key_release
    )

    increment_build_number(
      build_number: build_number
    )

    gym(
      export_method: 'app-store',
      configuration: 'Release',
      cloned_source_packages_path: ".cache/spm",
    )

    upload_symbols_to_appmetrica(post_api_key: appmetrica_key)

    pilot(
      api_key_path: api_key_release,
      beta_app_review_info: {
        contact_email: 'handh.ci@gmail.com',
        contact_first_name: 'Heads',
        contact_last_name: 'Hands',
        contact_phone: '+79999999999',
        demo_account_name: "+80034645460",
        demo_account_password: "QwertyMatch!Club",
        notes: 'Fixes and improvements'
      },
      distribute_external: true,
      demo_account_required: true,
      beta_app_feedback_email: 'handh.ci@gmail.com',
      beta_app_description: 'Beta build for testing',
      changelog: 'Release fixes and improvements',
      groups: 'Beta',
    )
  end

  desc 'Install cocoapods dependencies'
  lane :bootstrap_cocoapods do
    cocoapods(
      try_repo_update_on_error: true,
    )
  end

  desc 'Download and refresh dsyms'
  lane :refresh_dsyms do
    download_dsyms(version: "22.9.0")
    upload_symbols_to_appmetrica(post_api_key: appmetrica_key)
    clean_build_artifacts
  end
end
